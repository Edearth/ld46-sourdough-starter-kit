[gd_resource type="VisualShader" load_steps=7 format=2]

[sub_resource type="VisualShaderNodeVectorOp" id=7]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.2, 0.2, 0.2 ) ]
operator = 1

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "texture"

[sub_resource type="VisualShaderNodeVectorOp" id=3]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0.12, 0.68, 0.93 ), 1, Vector3( 0, 0, 0 ) ]
operator = 6

[sub_resource type="VisualShaderNodeTexture" id=4]
source = 2

[sub_resource type="VisualShaderNodeInput" id=5]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id=6]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1.5, 1.5, 1.5 ) ]
operator = 2

[resource]
code = "shader_type canvas_item;
render_mode unshaded;




void vertex() {
// Input:3
	vec3 n_out3p0 = vec3(VERTEX, 0.0);

// VectorOp:4
	vec3 n_in4p1 = vec3(1.50000, 1.50000, 1.50000);
	vec3 n_out4p0 = n_out3p0 * n_in4p1;

// Output:0
	VERTEX = n_out4p0.xy;

}

void fragment() {
// VectorOp:7
	vec3 n_in7p0 = vec3(0.12000, 0.68000, 0.93000);
	vec3 n_in7p1 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out7p0 = max(n_in7p0, n_in7p1);

// Texture:9
	vec3 n_out9p0;
	float n_out9p1;
	{
		vec4 _tex_read = texture(TEXTURE , UV.xy);
		n_out9p0 = _tex_read.rgb;
		n_out9p1 = _tex_read.a;
	}

// VectorOp:10
	vec3 n_in10p1 = vec3(0.20000, 0.20000, 0.20000);
	vec3 n_out10p0 = vec3(n_out9p1) - n_in10p1;

// Output:0
	COLOR.rgb = n_out7p0;
	COLOR.a = dot(n_out10p0, vec3(0.333333, 0.333333, 0.333333));

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -563, -93 )
mode = 1
flags/light_only = false
flags/unshaded = true
nodes/vertex/3/node = SubResource( 5 )
nodes/vertex/3/position = Vector2( -480, 200 )
nodes/vertex/4/node = SubResource( 6 )
nodes/vertex/4/position = Vector2( -120, 120 )
nodes/vertex/connections = PoolIntArray( 3, 0, 4, 0, 4, 0, 0, 0 )
nodes/fragment/0/position = Vector2( 460, 160 )
nodes/fragment/6/node = SubResource( 2 )
nodes/fragment/6/position = Vector2( -500, 240 )
nodes/fragment/7/node = SubResource( 3 )
nodes/fragment/7/position = Vector2( 60, -20 )
nodes/fragment/9/node = SubResource( 4 )
nodes/fragment/9/position = Vector2( -240, 260 )
nodes/fragment/10/node = SubResource( 7 )
nodes/fragment/10/position = Vector2( 40, 260 )
nodes/fragment/connections = PoolIntArray( 9, 1, 10, 0, 10, 0, 0, 1, 7, 0, 0, 0 )
